{"version":3,"file":"static/webpack/static/development/pages/order.js.eaf9ae304f4a735e300b.hot-update.js","sources":["webpack:///./components/Order.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport { format } from \"date-fns\";\nimport Head from \"next/head\";\nimport gql from \"graphql-tag\";\nimport formatMoney from \"../lib/formatMoney\";\nimport Error from \"./ErrorMessage\";\nimport OrderStyles from \"./styles/OrderStyles\";\n\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    order(id: $id) {\n      id\n      charge\n      total\n      createdAt\n      user {\n        id\n      }\n      items {\n        id\n        title\n        description\n        price\n        image\n        quantity\n      }\n    }\n  }\n`;\n\nclass Order extends React.Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired\n  };\n  render() {\n    return (\n      <Query query={SINGLE_ORDER_QUERY} variables={{ id: this.props.id }}>\n        {({ data, error, loading }) => {\n          if (error) return <Error error={error} />;\n          if (loading) return <p>Loading...</p>;\n          console.log(data);\n          const order = data.order;\n          return (\n            <OrderStyles>\n              <Head>\n                <title>Sick Fits - Order</title>\n              </Head>\n              <p>\n                <span>Order ID:</span>\n                <span>{this.props.id}</span>\n              </p>\n              <p>\n                <span>Charge</span>\n                <span>{order.charge}</span>\n              </p>\n              <p>\n                <span>Date</span>\n                <span>{format(order.createdAt, \"MMMM d, YYYY h:mm a\")}</span>\n              </p>\n            </OrderStyles>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default Order;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAqBA;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;;;;AAlCA;AACA;AADA;AAEA;AADA;AACA;AAmCA;;;;A","sourceRoot":""}